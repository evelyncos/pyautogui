{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "da0bd496",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "056b54ab",
   "metadata": {},
   "outputs": [],
   "source": [
    "arquivo = pd.read_csv(r'C:\\Users\\Unip\\diplomas\\psicologia.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "448e83fe",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RA</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>D415FF8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>C63BIH0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>D257GE2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>T564360</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>D411586</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        RA\n",
       "0  D415FF8\n",
       "1  C63BIH0\n",
       "2  D257GE2\n",
       "3  T564360\n",
       "4  D411586"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "arquivo.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "7d17b891",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pyautogui"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "c4677858",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Point(x=1138, y=390)\n"
     ]
    }
   ],
   "source": [
    "print (pyautogui.position())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "77192b6d",
   "metadata": {},
   "outputs": [],
   "source": [
    "pyautogui.pause= 10"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "cf1e6819",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "KeyboardInterrupt\n",
      "\n"
     ]
    }
   ],
   "source": [
    "for i in range (1575):\n",
    "    pyautogui.click(170,316)    \n",
    "    pyautogui.typewrite(arquivo['RA'][i])\n",
    "    pyautogui.sleep(2)\n",
    "    pyautogui.click(142,347)\n",
    "    pyautogui.sleep(5)  \n",
    "    pyautogui.click(28,535)\n",
    "    pyautogui.sleep(4)\n",
    "    pyautogui.click(328,420)\n",
    "    pyautogui.sleep(5)\n",
    "    pyautogui.click(682,447)\n",
    "    pyautogui.sleep(5)\n",
    "    pyautogui.click(141,320)\n",
    "    pyautogui.click(141,320)\n",
    "    pyautogui.keyDown('delete')\n",
    "    pyautogui.keyUp('delete')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "305f6f01",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "41312a5c",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9180a916",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
